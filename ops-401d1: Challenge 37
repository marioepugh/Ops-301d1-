#!/usr/bin/env python3
# Script:                   401 Ops Challenge Day 37
# Author:                   Mario Pugh
# Date of latest revision:  11/24/20
# Purpose:                  Web Application Fingerprinting Part 2 of 3 or Cookie Capture Capades

import os   
import sys  
import nmap 
import socket
import datetime
import requests
import subprocess

# Declaration of variables

# Declaration of function
def interface():
    user_choice = input("""\

    
                                        .;;!!!@!!!;.
.!!!!!;.                             .;!!!!!!!!!!!!!
----!!!!!!.                       .;!!!!!!!!!!UWWW$$$   
    :$$NWX!!:                  .:!!!!!!XUWW$$$$$$$$$P
    $$$$$##WX!;            :<!!!!UW$$$$$"  $$$$$$$$#
    $$$$$  $$$UX         :!!UW$$$$$$$$$$   4$$$$$*
    ^$$$B  $$$$\           $$$$$$$$$$$$$   d$$R"
      "*$bd$$$$            '*$$$$$$$$$$$$o+#"
           ''''                '''''''''
                                         xxxxx
 xxxxxx                                xxx   
     xx                              xxx
      xx                            xxx
       xx                         xxx  
         xx                    xxx    
            xxxxxxxxxxxxxxxxx x 
                xxxxxxxxx
                  xxxxx
 

    What type of service fingerprinting would you like to perform?
    1) TCP Port Range Scanner for Specific Port (mode 1)
    2) (mode 2)
    3) (mode 3)
    4) Would you like to sniff cookies, use the WebCookieSniffer
    5) exit
    """)

    if(user_choice == "1"):
        mode1()
    elif(user_choice == "2"):
        mode2()
    elif(user_choice == "3"):
        mode3()
    elif(user_choice == "4"):
        mode4()    
    else:
        print("Exiting....")
    exit() 

# cmd = "date"

def mode1():
        urlScanner = input("Please enter the URL or IP Address: ") # Prompts the user to type a URL or IP address.
        portScanner = str(input("Please input a port number to target: ")) # Prompts the user to type a port number.
        print(".........Nmap.........") 
        process = subprocess.Popen(["nmap", "-sV", urlScanner]) # Performs banner grabbing using Nmap against the target address of all well-known ports; prints the results to the screen
        try:
            process.wait(timeout=5)
        except:
            process.kill()
        print(".........Telnet.........")    
        process1 = subprocess.Popen(["telnet", urlScanner, portScanner]) # Performs banner grabbing using telnet against the target address at the target port; prints the results to the screen 
        try:
            process1.wait(timeout=5)
        except:
            process1.kill()
        print(".........Netcat.........") 
        process = subprocess.Popen(["netcat", urlScanner, portScanner]) # Performs banner grabbing using netcat against the target address at the target port; prints the results to the screen 
        try:
            process.wait(timeout=5)
        except:
            process.kill()
        print("That concludes your operation.")   

def mode2():
    print("Not yet eager beaver")
    exit()

def mode3():
    print("Come back Wednesday after 6pm")
    exit()

def mode4(): 
#    targetsite = input("Enter target site:")
    targetsite = "http://www.whatarecookies.com/cookietest.asp"
    response = requests.get(targetsite) 
    cookie = response.cookies
    print("Target site is " + targetsite)
    print(cookie)
    Sniffedhtml = requests.get(targetsite, cookies=cookie) # Send the cookie back to the site and receive a HTTP response
    Sniffedwebsite = Sniffedhtml.text
    with open ('Sniffedcookie.html', 'w') as file:file.write(Sniffedwebsite) # Generate a .html file to capture the contents of the HTTP response
    print("Opening sniffed website ")
    os.system("firefox /home/osboxes/bin/Ops401Python/Sniffedcookie.html") # Open it with Firefox
    exit()

# Main

interface()
mode2()
mode3()

# End
