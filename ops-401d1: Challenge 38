#!/usr/bin/env python3

# Author:      Abdou Rockikz
# Description: TODO: XSS Vulnerability Scanner
# Date:        TODO: November 25 2020
# Modified by: TODO: Mario Pugh

### TODO: Install requests bs4 before executing this in Python3
### pip3 install request bs4
 
# Import libraries

import requests
from pprint import pprint
from bs4 import BeautifulSoup as bs
from urllib.parse import urljoin

# Declare functions

### TODO: Add function explanation here ###
### This function gets all of the forms froooom the HTML content of the web page ###
def get_all_forms(url):
    soup = bs(requests.get(url).content, "html.parser")
    return soup.find_all("form")

### TODO: Add function explanation here ###
### Returns a list of forms as soup objects, may need to extract every form from detils and attributes ###
def get_form_details(form):
    details = {}
    action = form.attrs.get("action").lower()
    method = form.attrs.get("method", "get").lower()
    inputs = []
    for input_tag in form.find_all("input"):
        input_type = input_tag.attrs.get("type", "text")
        input_name = input_tag.attrs.get("name")
        inputs.append({"type": input_type, "name": input_name})
    details["action"] = action
    details["method"] = method
    details["inputs"] = inputs
    return details

### TODO: Add function explanation here ###
### After we got the form details, this function submits any given form. The function takes form_details which is the output of get_form_details() function, it accepts the url   in which  the original HTML form was put and the value that is set                                        to   every test or search input field. ###
def submit_form(form_details, url, value):
    target_url = urljoin(url, form_details["action"])
    inputs = form_details["inputs"]
    data = {}
    for input in inputs:
        if input["type"] == "text" or input["type"] == "search":
            input["value"] = value
        input_name = input.get("name")
        input_value = input.get("value")
        if input_name and input_value:
            data[input_name] = input_value

    if form_details["method"] == "post":
        return requests.post(target_url, data=data)
    else:
        return requests.get(target_url, params=data)

### TODO: Add function explanation here ###
### With the ready functions to extract all from a web page and submit them, tttttthis function scans for the XSS vulnerability ###
def scan_xss(url):
    forms = get_all_forms(url)
    print(f"[+] Detected {len(forms)} forms on {url}.")
    js_script = "<Script>alert('Vulnerability alert! Target aquired.')</scripT>"
    # returning value
    is_vulnerable = False
    for form in forms:
        form_details = get_form_details(form)
        content = submit_form(form_details, url, js_script).content.decode()
        if js_script in content:
            print(f"[+] XSS Detected on {url}")
            print(f"[*] Form details:")
            pprint(form_details)
            is_vulnerable = True
    return is_vulnerable

# Main

### TODO: Add main explanation here ###
### Given a URL this grabs all thhe HTML forms and then print the number of forms detected. Iterates all over the forms and submits the form with putting the value of all text and search input fields with a Javascript code. If the JS code is injected and successfully executed it shows that the web page is XSS vulnerable. ###
if __name__ == "__main__":
    url = input("Enter a URL to test for XSS:") 
    print(scan_xss(url))

### TODO: When you have finished annotating this script with your own comments, copy it to Web Security Dojo
### TODO: Test this script against one XSS-positive target and one XSS-negative target
### TODO: Paste the outputs here as comments in this script, clearling indicating which is positive detection and negative detection

# dojo@dojo-VirtualBox:~/Desktop/class-38$ python3 Ops38.py 
# Enter a URL to test for XSS:http://dvwa.com
# [+] Detected 0 forms on http://dvwa.com.
# False
# dojo@dojo-VirtualBox:~/Desktop/class-38$ python3 Ops38.py 
# Enter a URL to test for XSS:https://www.codefellows.org
# [+] Detected 0 forms on https://www.codefellows.org.
# False
# dojo@dojo-VirtualBox:~/Desktop/class-38$ python3 Ops38.py 
# Enter a URL to test for XSS:https://www.cnn.com
# [+] Detected 2 forms on https://www.cnn.com.
# False

# dojo@dojo-VirtualBox:~/Desktop/class-38$ python3 Ops38.py 
# Enter a URL to test for XSS:https://xss-game.appspot.com/level1/frame
# [+] Detected 1 forms on https://xss-game.appspot.com/level1/frame.
# [+] XSS Detected on https://xss-game.appspot.com/level1/frame
# [*] Form details:
# {'action': '',
# 'inputs': [{'name': 'query',
#             'type': 'text',
#             'value': "<Script>alert('it hit')</scripT>"},
#             {'name': None, 'type': 'submit'}],
# 'method': 'get'}
# True
